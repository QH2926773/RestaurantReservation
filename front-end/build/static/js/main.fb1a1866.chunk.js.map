{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/format-reservation-time.js","utils/api.js","layout/ErrorAlert.js","layout/Reservation/Reservation.js","dashboard/Tables.js","dashboard/Dashboard.js","layout/NotFound.js","utils/useQuery.js","layout/Reservation/ReservationForm.js","layout/Reservation/NewReservation.js","layout/Tables/NewTable.js","layout/Reservation/SeatReservation.js","layout/Search/Search.js","layout/Reservation/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","timeFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","formatTime","reservation_time","formatReservationTime","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","method","mode","body","JSON","stringify","readReservation","reservation_id","table_id","cancelReservation","listTables","table","ErrorAlert","Reservation","last_name","first_name","mobile_number","people","onClick","window","confirm","Tables","onFinish","tables","handleFinish","target","dataset","tableIdFinish","reservationIdFinish","rows","length","table_name","capacity","Dashboard","useState","setReservations","reservationDate","setReservationDate","reservationsError","setReservationsError","setTables","loadDashboard","abortController","AbortController","catch","abort","useEffect","reservationList","res","style","listStyleType","currentDate","split","year","month","day","setMonth","setDate","previous","next","finishTable","NotFound","useQuery","URLSearchParams","useLocation","search","ReservationForm","history","useHistory","useParams","setReservation","setError","handleChange","Number","onSubmit","event","preventDefault","createReservation","push","updateReservation","htmlFor","onChange","required","min","goBack","NewReservation","NewTable","setTable","errors","setErrors","newValue","Error","isValidName","validate","log","createTable","SeatReservation","tableId","setTableId","tableErrors","setTableErrors","seatReservation","selectedTable","find","Search","mobileNumber","setMobileNumber","loadReservations","placeholder","EditReservation","Routes","get","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb1a1866.chunk.js","sourcesContent":["\n\nimport React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\nexport function notTuesday(reservation_date, errors) {\n  const [year, month, day] = reservation_date.split(\"-\");\n  const date = new Date(`${month} ${day}, ${year}`);\n  if (date.getDay() === 2) {\n    errors.push(<li key=\"tuesday\">Restaurant is closed on Tuesdays</li>);\n  }\n}\n\nexport function futureEvent(reservation_date, errors) {\n  const [year, month, day] = reservation_date.split(\"-\");\n  const date = new Date(`${month} ${day}, ${year}`);\n  const today = new Date();\n  if (date < today) {\n    errors.push(<li key=\"past\">Reservation must be in the future</li>);\n  }\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","import { formatAsTime } from \"./date-time\";\n\nfunction formatTime(reservation) {\n  reservation.reservation_time = formatAsTime(reservation.reservation_time);\n  return reservation;\n}\n\n/**\n * Formats the reservation_time property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_time property formatted as HH:MM.\n */\nexport default function formatReservationTime(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatTime)\n    : formatTime(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-time\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservation]>}\n */\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n/**\n * Creates a reservation.\n * @returns {Promise<reservation>}\n */\n\nexport async function createReservation(reservation, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  const options = {\n    method: \"POST\",\n    mode: \"cors\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  const response = await fetchJson(url, options, reservation);\n  return response;\n}\n\n/**\n * Retrieves a reservation.\n * @returns {Promise<reservation>}\n */\nexport async function readReservation(reservation_id, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservation_id}`);\n  const options = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers,\n    signal,\n  };\n  return await fetchJson(url, options, reservation_id)\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n/**\n * Updates status of reservation and\n * @returns {Promise<reservation>}\n */\nexport async function seatReservation(reservation_id, table_id, signal) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id } }),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\nexport async function updateReservation(reservation, signal) {\n  const { reservation_date, reservation_time, reservation_id } = reservation;\n  const url = `${API_BASE_URL}/reservations/${reservation_id}`;\n\n  const data = {\n    ...reservation,\n    reservation_date,\n    reservation_time,\n  };\n\n  const options = {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify({ data }),\n    headers,\n    signal,\n  };\n  const response = await fetchJson(url, options, reservation);\n\n  return Array.isArray(response) ? response[0] : response;\n}\n\nexport async function cancelReservation(reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}/status`;\n  const options = {\n    method: \"PUT\",\n    mode: \"cors\",\n    headers,\n    body: JSON.stringify({\n      data: {\n        status: \"cancelled\",\n      },\n    }),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves all existing tables.\n * @returns {Promise<[table]>}\n *  a promise that resolves to a possibly empty array of tables saved in the database.\n */\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n/**\n * Creates a table.\n * @returns {Promise<table>}\n *  a promise that resolves to a table saved in the database.\n */\nexport async function createTable(table, signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  const options = {\n    method: \"POST\",\n    mode: \"cors\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n\n  return await fetchJson(url, options, table);\n}\n\n/**\n * Finishes a table.\n * @returns {Promise<table>}\n *  a promise that resolves to a table updated in the database.\n *  the table is freed of its reservation.\n */\nexport async function finishTable(table_id) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n  };\n  return await fetchJson(url, options, {});\n}","\n\nimport React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Reservation({ onCancel = ()=>{}, reservation = {} }) {\n\n  function cancelHandler() {\n    if(window.confirm(\"Do you want to cancel this reservation? This cannot be undone.\")) {\n        onCancel(reservation.reservation_id);\n    }\n  }\n  return (\n    <>\n      <div className=\"form-group row\" key={reservation.reservation_id}>\n        <div className=\"col-sm-1\">{reservation.reservation_id}</div>\n        <div className=\"col-sm-2\">\n        {reservation.last_name}, {reservation.first_name}\n        </div>\n        <div className=\"col-sm-2\">{reservation.mobile_number}</div>\n        <div className=\"col-sm-2\">{reservation.reservation_date}</div>\n        <div className=\"col-sm-1\">{reservation.reservation_time}</div>\n        <div className=\"col-sm-1\">{reservation.people}</div>\n        <div\n          className=\"col-sm-1\"\n          data-reservation-id-status={reservation.reservation_id}\n        >\n          {reservation.status}\n        </div>\n      </div>\n      <div className=\"form-group row\">\n        {reservation.status === \"booked\" ? (\n          <div>\n            <Link\n              className=\"btn btn-primary\"\n              to={`/reservations/${reservation.reservation_id}/seat`}\n            >\n              seat\n            </Link>\n            <Link\n              className=\"btn btn-warning\"\n              to={`/reservations/${reservation.reservation_id}/edit`}\n            >\n              edit\n            </Link>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              data-reservation-id-cancel={reservation.reservation_id}\n              onClick={cancelHandler}\n            >\n              cancel\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Reservation;","import React from \"react\";\n\nfunction Tables({onFinish, tables = [] }) {\n  function handleFinish({\n      target: { dataset: { tableIdFinish, reservationIdFinish } } = {},\n    }) {\n      if (\n        tableIdFinish && reservationIdFinish &&\n        window.confirm(\n          \"Is this table ready to seat new guests? This cannot be undone.\"\n        )\n      ) {\n          onFinish(tableIdFinish, reservationIdFinish);\n      }\n  }\n\n  const rows = tables.length ? (\n    tables.map((table) => {\n      return (\n        <div className=\"form-group row\" key={table.table_id}>\n          <div className=\"col-sm-2\">{table.table_name}</div>\n          <div className=\"col-sm-2\">{table.capacity}</div>\n          <div className=\"col-sm-1\" data-table-id-status={table.table_id}>{table.reservation_id ? \"Occupied\" : \"Free\"}</div>\n          <div className=\"col-sm-1\">\n            {table.reservation_id ?\n              <button type=\"button\" className=\"btn btn-success\" data-table-id-finish={table.table_id} data-reservation-id-finish={table.reservation_id}\n onClick={handleFinish}>\n                Finish\n              </button> : (\"\")\n            }\n          </div>\n        </div>\n      );\n    })\n    ) : (\n    <div>No results</div>\n  );\n  return (\n      <div className=\"table\">\n      {rows}\n      </div>\n  )\n}\n\nexport default Tables;","import React, { useEffect, useState } from \"react\";\nimport { listReservations, cancelReservation, listTables, finishTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { next, previous, today } from \"../utils/date-time\";\nimport Reservation from \"../layout/Reservation/Reservation\";\nimport Tables from \"./Tables\";\n\n/**\n * Defines the dashboard page.\n * @param date\n *  the date for which the user wants to view reservations.\n * @returns {JSX.Element}\n */\nfunction Dashboard({ date }) {\n  const [reservations, setReservations] = useState([]);\n  const [reservationDate, setReservationDate] = useState(date);\n  const [reservationsError, setReservationsError] = useState(null);\n  const [tables, setTables] = useState([]);\n\n  useEffect(loadDashboard, [reservationDate]);\n\n  function loadDashboard() {\n    const abortController = new AbortController();\n    setReservationsError(null);\n    listReservations({ date: reservationDate }, abortController.signal)\n      .then(setReservations)\n      .catch(setReservationsError);\n\n    listTables().then(setTables);\n    return () => abortController.abort();\n  }\n  \n  function onFinish(table_id, reservation_id) {\n    finishTable(table_id, reservation_id)\n      .then(loadDashboard)\n  }\n\n  function onCancel(reservation_id) {\n    const abortController = new AbortController();\n    cancelReservation(reservation_id, abortController.signal)\n      .then(loadDashboard)\n    return () => abortController.abort();\n  }\n\n  const reservationList = (\n    <ul>\n      {reservations.map((res) => (\n        <li style={{ listStyleType: \"none\" }} key={res.reservation_id}>\n          <Reservation onCancel={onCancel} reservation={res} />\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <main>\n      <h1>Dashboard</h1>\n      <div className=\"d-md-flex mb-3\">\n        <h4 className=\"mb-0\">Reservations for date</h4>\n      </div>\n      <ErrorAlert error={reservationsError} />\n      <button\n        type=\"button\"\n        onClick={() => {\n          setReservationDate(previous(reservationDate));\n        }}\n        className=\"btn btn-secondary\"\n      >\n        {`<  Yesterday`}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setReservationDate(today(reservationDate));\n        }}\n        className=\"btn btn-secondary m-2\"\n      >\n        Today\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setReservationDate(next(reservationDate));\n        }}\n        className=\"btn btn-secondary\"\n      >\n        {`Tomorrow  >`}\n      </button>\n      {reservations.length > 0 ? (\n        reservationList\n      ) : (\n        <p>There are currently no reservations for {reservationDate}</p>\n      )}\n\n      <Tables onFinish={onFinish} tables={tables} />\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\n *\n * @example\n *\n *     const query = useQuery();\n *     const date = query.get(\"date\")\n */\n\nimport { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorAlert from \"../ErrorAlert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  createReservation,\n  readReservation,\n  updateReservation,\n} from \"../../utils/api\";\n\n/**\n * Defines the new reservation for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction ReservationForm() {\n  const history = useHistory();\n  const { reservation_id } = useParams();\n\n  const initalFormState = {\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    reservation_date: \"\",\n    reservation_time: \"\",\n    people: 1,\n    status: null,\n  };\n\n  const [reservation, setReservation] = useState({\n    ...initalFormState,\n  });\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (reservation_id) {\n      setError(null);\n      readReservation(reservation_id)\n        .then(setReservation)\n        .catch(setError);\n    }\n  }, [reservation_id]);\n\n  const handleChange = ({ target }) => {\n    let { value, name } = target;\n    if (name === \"people\") {\n      setReservation({\n        ...reservation,\n        [name]: Number(value),\n      });\n      return;\n    }\n\n    setReservation({\n      ...reservation,\n      [name]: value,\n    });\n  };\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const abortController = new AbortController();\n    setError(null);\n    // pull reservation_id from URL params to see if the user is editing or creating a reservation\n    if (reservation_id) {\n      // update reservation\n      updateReservation(reservation, abortController.signal)\n        .then(() => history.push(`/dashboard/?date=${reservation.reservation_date}`))\n        .catch((error) => {\n          setError(error);\n        });\n    } else {\n      // create new reservation\n    createReservation(reservation, abortController.signal)\n      .then(() => history.push(`/dashboard/?date=${reservation.reservation_date}`))\n      .catch((error) => {\n        setError(error);\n      });\n    return () => abortController.abort();\n    }\n  }\n\n  return (\n    <main>\n      <ErrorAlert error={error} />\n      <form name=\"reservation-form\" onSubmit={handleSubmit}>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"first-name\">First Name</label>\n          <input\n            id=\"first-name\"\n            name=\"first_name\"\n            type=\"text\"\n            onChange={handleChange}\n            value={reservation.first_name}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"last-name\">Last Name</label>\n          <input\n            id=\"last-name\"\n            name=\"last_name\"\n            type=\"text\"\n            onChange={handleChange}\n            value={reservation.last_name}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"mobile-number\">Mobile Number</label>\n          <input\n            id=\"mobile-number\"\n            name=\"mobile_number\"\n            type=\"text\"\n            onChange={handleChange}\n            value={reservation.mobile_number}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"reservation-date\">Date</label>\n          <input\n            id=\"reservation-date\"\n            name=\"reservation_date\"\n            type=\"date\"\n            onChange={handleChange}\n            value={reservation.reservation_date}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"reservation-time\">Time</label>\n          <input\n            id=\"reservation-time\"\n            name=\"reservation_time\"\n            type=\"time\"\n            onChange={handleChange}\n            value={reservation.reservation_time}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"people\">People</label>\n          <input\n            id=\"people\"\n            name=\"people\"\n            type=\"number\"\n            min=\"1\"\n            onChange={handleChange}\n            value={reservation.people}\n            required\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2\"\n          onClick={() => history.goBack()}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </main>\n  );\n}\n\nexport default ReservationForm;\n\n\n","import React from \"react\";\nimport ReservationForm from \"./ReservationForm\";\n\n/**\n * Defines the new reservation component.\n *\n * @returns {JSX.Element}\n */\n\nfunction NewReservation() {\n  return (\n    <main>\n      <h1>Create Reservation</h1>\n      <ReservationForm />\n    </main>\n  )\n}\n  \n\nexport default NewReservation;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createTable } from \"../../utils/api\";\nimport ErrorAlert from \"../ErrorAlert\";\n\n/**\n * Defines the new table for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction NewTable() {\n  const history = useHistory();\n  const initialState = {\n    table_name: \"\",\n    capacity: 0,\n  };\n\n  const [table, setTable] = useState(initialState);\n  const [errors, setErrors] = useState(null);\n\n  function validate(table) {\n    const errors = [];\n\n    function isValidName({ table_name }) {\n      if (table_name.length < 2) {\n        errors.push(\n          new Error(`Table name '${table_name}' must be 2 or more characters`)\n        );\n      }\n    }\n\n    function isValidCapacity({ capacity }) {\n      if (capacity <= 0) {\n        errors.push(new Error(\"Capacity must be at least 1\"));\n      }\n    }\n\n    isValidName(table);\n    isValidCapacity(table);\n\n    return errors;\n  }\n\n  const handleChange = ({ target: { name, value } }) => {\n    let newValue = value;\n    if(name === 'capacity') {\n      newValue = Number(value); \n    }\n    setTable({\n      ...table,\n      [name]: newValue,\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const errors = validate(table);\n    if (errors.length) {\n      console.log(errors);\n      return setErrors(errors);\n    }\n\n    const abortController = new AbortController();\n    setErrors(null);\n    createTable(table, abortController.signal)\n      .then(() => history.push(`/dashboard`))\n      .catch((error) => {\n        setErrors(error);\n      });\n    return () => abortController.abort();\n  }\n\n  return (\n    <main>\n      <h1>Create Table</h1>\n      <ErrorAlert error={ errors ? errors[0] : null } />\n      <form name=\"table-form\" onSubmit={handleSubmit}>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"table-name\">Name</label>\n          <input\n            id=\"table-name\"\n            name=\"table_name\"\n            type=\"text\"\n            onChange={handleChange}\n            value={table.table_name}\n            required\n          />\n        </div>\n        <div className=\"form-group d-md-flex mb-3\">\n          <label htmlFor=\"table-capacity\">Capacity</label>\n          <input\n            id=\"table-capacity\"\n            name=\"capacity\"\n            type=\"number\"\n            onChange={handleChange}\n            value={table.capacity}\n            required\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2\"\n          onClick={() => history.goBack()}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </main>\n  );\n}\n\nexport default NewTable;","import React, { useState, useEffect } from \"react\";\nimport ErrorAlert from \"../ErrorAlert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { listTables, seatReservation, readReservation } from \"../../utils/api\";\n\nfunction SeatReservation(onSubmit) {\n  const history = useHistory();\n  const { reservation_id } = useParams();\n  const [reservation, setReservation] = useState({});\n  const [tables, setTables] = useState([]);\n  const [tableId, setTableId] = useState(\"\");\n  const [tableErrors, setTableErrors] = useState(null);\n\n  useEffect(loadTables, []);\n  useEffect(() => {\n    readReservation(reservation_id).then(setReservation);\n  }, [reservation_id]);\n\n  function loadTables() {\n    const abortController = new AbortController();\n    setTableErrors(null);\n    listTables(abortController.signal).then(setTables).catch(setTableErrors);\n    return () => abortController.abort();\n  }\n\n  function changeHandler({ target: { value } }) {\n    setTableErrors(null);\n    const errors = validate(value);\n    if (errors.length) {\n      console.log(errors);\n      return setTableErrors(errors);\n    }\n\n    setTableId(value);\n  }\n\n  function validate(table_id) {\n    const errors = [];\n    const selectedTable = tables.find(\n      (table) => table.table_id === Number(table_id)\n    );\n    if (selectedTable.reservation_id) {\n      errors.push(new Error(`Table ${table_id} is occupied`));\n    }\n\n    if (reservation.people > selectedTable.capacity) {\n      errors.push(\n        new Error(\n          `Table capacity not big enough to fit a party of ${reservation.people}`\n        )\n      );\n    }\n    return errors;\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n\n    seatReservation(reservation_id, tableId, abortController.signal)\n      .then(() => history.push(\"/dashboard\"))\n      .catch(setTableErrors);\n    return () => abortController.abort();\n  }\n\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n        <select\n          className=\"m-2\"\n          id=\"table_id\"\n          name=\"table_id\"\n          value={tableId}\n          required={true}\n          onChange={changeHandler}\n        >\n          <option value=\"\">Table</option>\n          {tables.map((table) => (\n            <option key={table.table_id} value={table.table_id}>\n              {table.table_name} - {table.capacity}\n            </option>\n          ))}\n        </select>\n        <button\n        type=\"submit\"\n        className=\"btn btn-primary m-2\"\n      >\n        Submit\n      </button>\n      </form>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary m-2\"\n        onClick={() => history.goBack()}\n      >\n        Cancel\n      </button>\n      <ErrorAlert error={tableErrors ? tableErrors[0] : null} />\n    </>\n  );\n}\n\nexport default SeatReservation;\n","import React, { useState } from \"react\";\nimport ErrorAlert from \"../ErrorAlert\";\nimport { listReservations, cancelReservation } from \"../../utils/api\";\nimport Reservation from \"../Reservation/Reservation\";\n\nfunction Search() {\n  const [reservations, setReservations] = useState([]);\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  function handleChange({ target: { value } }) {\n    setMobileNumber(value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    loadReservations();\n  }\n\n  function loadReservations() {\n    listReservations({ mobile_number: mobileNumber })\n    .then(setReservations)\n    .catch(setErrors);\n  }\n\n  function onCancel(reservation_id) {\n    const abortController = new AbortController();\n    cancelReservation(reservation_id, abortController.signal)\n      .then(loadReservations)\n    return () => abortController.abort();\n  }\n\n  const reservationList = reservations.length ? (\n    <ul>\n      {reservations.map((res) => (\n        <li style={{ listStyleType: \"none\" }} key={res.reservation_id}>\n          <Reservation onCancel={onCancel} reservation={res} />\n        </li>\n      ))}\n    </ul>\n  ) : <p>No reservations found</p>\n\n  return (\n    <main>\n      <h3>Search for reservation by phone number</h3>\n      <ErrorAlert error={errors ? errors[0] : null} />\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            id=\"mobile_number\"\n            name=\"mobile_number\"\n            className=\"form-control\"\n            onChange={handleChange}\n            value={mobileNumber}\n            placeholder=\"mobile number\"\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {reservationList}\n    </main>\n  );\n}\n\nexport default Search;\n\n","import React from \"react\";\nimport ReservationForm from \"./ReservationForm\";\n\n/**\n * Defines the edit reservation page for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction EditReservation() {\n  return (\n    <main>\n      <h1>Edit Reservation</h1>\n      <ReservationForm />\n    </main>\n  )\n}\n\nexport default EditReservation;","import React from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport { today } from \"../utils/date-time\";\nimport useQuery from \"../utils/useQuery\";\nimport NewReservation from \"./Reservation/NewReservation\";\nimport NewTable from \"./Tables/NewTable\";\nimport SeatReservation from \"./Reservation/SeatReservation\";\nimport Search from \"./Search/Search\"\nimport EditReservation from \"./Reservation/EditReservation\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  const query = useQuery();\n  const date = query.get(\"date\");\n\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact={true} path=\"/reservations\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route path=\"/dashboard/\">\n        <Dashboard date={date ? date : today()} />\n      </Route>\n      <Route path=\"/reservations/new\">\n        <NewReservation />\n      </Route>\n      <Route path=\"/tables/new\">\n        <NewTable />\n      </Route>\n      <Route path=\"/reservations/:reservation_id/seat\">\n        <SeatReservation />\n      </Route>\n      <Route path=\"/reservations/:reservation_id/edit\">\n        <EditReservation />\n      </Route>\n      <Route path=\"/search\">\n        <Search />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row h-100\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}